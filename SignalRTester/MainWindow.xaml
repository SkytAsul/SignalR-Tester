<mah:MetroWindow x:Class="SignalRTester.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:vm="clr-namespace:SignalRTester.ViewModels"
        xmlns:uc="clr-namespace:SignalRTester.UserControls"
        mc:Ignorable="d" 
        Title="Testeur SignalR" Height="600" Width="800" Closed="MetroWindow_Closed">
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="CommandCloseMethod_Executed" CanExecute="CommandCloseMethod_CanExecute"/>
    </Window.CommandBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="250"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <mah:MetroTabControl>
            <mah:MetroTabItem Header="Application">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <DockPanel Grid.Column="0" Margin="10">
                        <TextBlock VerticalAlignment="Center" Text="URL : "/>
                        <TextBox VerticalAlignment="Center" Margin="5 0 10 0"
                                 IsReadOnly="{Binding IsEditable, Converter={StaticResource invertBool}}"
                                 Text="{Binding Url}"/>
                    </DockPanel>

                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}">
                                <Setter Property="Padding" Value="10 13 10 13"/>
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                        </StackPanel.Resources>
                        
                        <Button x:Name="ButtonConnection" Click="ButtonConnect_Click" >
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="False">
                                            <Setter Property="Content" Value="Connect"/>
                                            <Setter Property="Background" Value="LightBlue"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                            <Setter Property="Content" Value="Disconnect"/>
                                            <Setter Property="Background" Value="LightSalmon"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="ButtonSave" Content="Save" Click="ButtonSave_Click"/>
                        <Button x:Name="ButtonLoad" Content="Load" Click="ButtonLoad_Click" IsEnabled="{Binding IsEditable}"/>
                    </StackPanel>

                    <GroupBox Grid.Column="1" Grid.RowSpan="2" Header="Requests headers">
                        <DataGrid ItemsSource="{Binding Headers}" CanUserAddRows="True" AutoGenerateColumns="False"
                                  IsReadOnly="{Binding IsEditable, Converter={StaticResource invertBool}}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="1*" Header="Key" Binding="{Binding Key}"/>
                                <DataGridTextColumn Width="2*" Header="Value" Binding="{Binding Value}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </Grid>
            </mah:MetroTabItem>
            
            
            <mah:MetroTabItem Header="Incoming methods">
                <mah:MetroTabControl Margin="10 10 10 0" TabStripPlacement="Top" ItemsSource="{Binding IncomingMethods}"
                                     mah:HeaderedControlHelper.HeaderFontSize="15" mah:TabControlHelper.Underlined="TabItems">
                    <mah:MetroTabControl.Resources>
                        <Style TargetType="mah:MetroTabItem">
                            <Setter Property="Header" Value="{Binding MethodName}"/>
                            <Setter Property="CloseButtonEnabled" Value="True"/>
                            <Setter Property="CloseTabCommand" Value="ApplicationCommands.Close"/>
                        </Style>
                    </mah:MetroTabControl.Resources>
                    <mah:MetroTabControl.ContentTemplate>
                        <DataTemplate>
                            <uc:UcMethodIn TypesLoader="{Binding DataContext.TypesLoader, RelativeSource={RelativeSource AncestorType=Window}}"
                                           IsEditable="{Binding DataContext.IsEditable, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        </DataTemplate>
                    </mah:MetroTabControl.ContentTemplate>
                </mah:MetroTabControl>
            </mah:MetroTabItem>
            
            
            <mah:MetroTabItem Header="Outgoing methods">
                <mah:MetroTabControl Margin="10 10 10 0" TabStripPlacement="Top" ItemsSource="{Binding OutgoingMethods}"
                                     mah:HeaderedControlHelper.HeaderFontSize="15" mah:TabControlHelper.Underlined="TabItems">
                    <mah:MetroTabControl.Resources>
                        <Style TargetType="mah:MetroTabItem">
                            <Setter Property="Header" Value="{Binding MethodName}"/>
                            <Setter Property="CloseButtonEnabled" Value="True"/>
                            <Setter Property="CloseTabCommand" Value="ApplicationCommands.Close"/>
                        </Style>
                    </mah:MetroTabControl.Resources>
                    <mah:MetroTabControl.ContentTemplate>
                        <DataTemplate>
                            <uc:UcMethodOut TypesLoader="{Binding DataContext.TypesLoader, RelativeSource={RelativeSource AncestorType=Window}}"
                                            IsEditable="{Binding DataContext.IsEditable, RelativeSource={RelativeSource AncestorType=Window}}"
                                            CanSend="{Binding DataContext.IsConnected, RelativeSource={RelativeSource AncestorType=Window}}"
                                            SendMethod="UcMethodOut_SendMethod"/>
                        </DataTemplate>
                    </mah:MetroTabControl.ContentTemplate>
                </mah:MetroTabControl>
            </mah:MetroTabItem>
            
            
            <mah:MetroTabItem Header="External types">
                <Button x:Name="ButtonDllLoad" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Content="Load DLL..." Click="ButtonDllLoad_Click"/>
            </mah:MetroTabItem>
        </mah:MetroTabControl>

        <TextBox x:Name="Console" Grid.Row="1" Margin="15,15,15,15"
                 Background="Black" Foreground="White" Text="{Binding Output, Mode=OneWay}"
                 HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" IsReadOnly="True" TextChanged="Console_TextChanged">
            <TextBox.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="ItemClearOutput" Header="Vider la sortie" Click="ItemClearOutput_Click" />
                </ContextMenu>
            </TextBox.ContextMenu>
        </TextBox>
    </Grid>
</mah:MetroWindow>
